= Введение

Данный отчет содержит результаты выполнения практических работ по дисциплине "Проектирование информационных систем".

== Цель работы

Изучить основы проектирования информационных систем и применить полученные знания на практике.

== Задачи

+ Проанализировать требования к системе
+ Спроектировать архитектуру системы
+ Реализовать основные компоненты
+ Провести тестирование системы

= Основная часть

== Анализ требований

В ходе анализа были выявлены следующие функциональные требования:

- Система должна обеспечивать мониторинг экологической обстановки
- Система должна вести учет выбросов предприятий
- Система должна предоставлять отчеты о состоянии окружающей среды

=== Функциональные требования

Система должна поддерживать:
- Регистрацию пользователей
- Ввод данных мониторинга
- Генерацию отчетов
- Экспорт данных в различных форматах

=== Нефункциональные требования

- Производительность: система должна обрабатывать до 1000 запросов в секунду
- Надежность: доступность системы должна составлять не менее 99.9%
- Безопасность: все данные должны быть зашифрованы

== Проектирование системы

Архитектура системы основана на микросервисном подходе и включает следующие компоненты:

+ *API Gateway* - точка входа для всех запросов
+ *Сервис аутентификации* - управление пользователями
+ *Сервис мониторинга* - обработка данных датчиков
+ *Сервис отчетов* - генерация аналитических отчетов
+ *База данных* - хранение всех данных системы

#figure(
  table(
    columns: 3,
    [*Компонент*], [*Технология*], [*Назначение*],
    [API Gateway], [Kong], [Маршрутизация запросов],
    [Auth Service], [Node.js], [Аутентификация],
    [Monitor Service], [Python], [Обработка данных],
    [Report Service], [Java], [Генерация отчетов],
    [Database], [PostgreSQL], [Хранение данных]
  ),
  caption: [Компоненты системы]
) <table-components>

В @table-components представлены основные компоненты разрабатываемой системы.

== Реализация

Реализация системы выполнялась поэтапно:

1. Настройка окружения разработки
2. Создание базовой структуры проекта
3. Реализация сервисов
4. Интеграционное тестирование

```python
# Пример кода сервиса мониторинга
class MonitoringService:
    def __init__(self, db_connection):
        self.db = db_connection
    
    def process_sensor_data(self, sensor_id, data):
        """Обработка данных с датчика"""
        processed_data = self.validate_data(data)
        return self.save_to_database(sensor_id, processed_data)
    
    def validate_data(self, data):
        """Валидация входных данных"""
        if not data or 'timestamp' not in data:
            raise ValueError("Invalid sensor data")
        return data
```

= Заключение

В ходе выполнения практических работ была спроектирована и частично реализована система мониторинга экологической безопасности. Система соответствует поставленным требованиям и готова к дальнейшему развитию.

Основные результаты работы:
- Проведен анализ требований к системе
- Спроектирована микросервисная архитектура
- Реализованы базовые компоненты системы
- Проведено тестирование основного функционала

Направления дальнейшего развития:
- Добавление новых типов датчиков
- Реализация машинного обучения для прогнозирования
- Создание мобильного приложения
- Интеграция с внешними системами

  
= Дополнительные материалы

== Изображение профиля разработчика

#figure(
  image("idutvuk.png", width: 50%),
  caption: [Профиль разработчика системы]
) <img-developer>

На @img-developer представлен профиль одного из разработчиков системы.

== Литературные источники

При разработке системы использовались современные подходы к проектированию информационных систем, описанные в работе @knuth:1984.

Документация создана с использованием современной системы верстки Typst, которая обеспечивает высокое качество типографики.
  
#bibliography(
  "refs.bib",
  title: "СПИСОК ЛИТЕРАТУРЫ", 
  style: "gost-r-705-2008-numeric",
  full: true,
)